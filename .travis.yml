sudo: required

language: bash

env:
  global:
      - DEPLOY_HOST=rpm.palette-software.com
      - DEPLOY_PATH=/var/palette-rpm-repo
      - DEPLOY_USER=palette-rpm
      - RPM_VERSION=1.0.$TRAVIS_BUILD_NUMBER

      # travis encrypt DEPLOY_PASS=...
      - secure: "bJ6nlFTqMguzzY9DZmdOA4AaeZdzaX7TAlSPcb8KtOmDuiGefrB5uhg4jzHxnRvk7VJmsVGKVO1iFsZCPKBeZmXQXiOMwVIQYoCIzuLmpdtZ8wZyKxvgXmPnMZYVkiaEQo7oCwXYUYM+erWjeV2pv3kCgHFTyEnLRX1XFZi5q4EkgZWKQkB+5NzyWUdxE9rIqh5dJUSzBtsWKLrx/WH/Zg49lu9ly2DvghSq0+OWekL30kAGs1TE5EN8pTMpTN4LZHKQ5+FhKwOGiDe8gVAKJ0j5iTrZS2/0yYWgLxHXvACpP38XeEhd7ESLbn2gPx5dRSCI6ChF/fXfT1NMqJ6K8FcKnCST+MTV4cFeqPhot2e+LXQbIneqvqoMCroI4Lmo4+evV0w2n3CpkYylrszBCjWAT6EWxq692CiqD+WgSiHWa+s5mWCp1iJiMyuzgK29G++NrEj/Ewg9+1HZ8iQa/mJpYI+SSUrOCPibpOoRBFfy54HN5ALQMXnTIdXc9P6Oozjt4KFaA6fxtz/RhxZOT6lWcWxhq/yh3t0LatHdCmpkp+zHHWQxaTM5+5bCgH0aFf5z8SiU/cbTtFBgsD6qmwN58d3XfMHNYX9vYT7fGXRYx+/ACe7sI7FuSCFCQ/FEGz76vAOl/VNtqtkvJ07UnvG3WBVCDJANGyILYTj1iIY="

# install the RPM package
addons:
  apt:
    packages:
      - rpm
      # To deploy the rpms, we need to ssh into places, and we dont want to store keys for now
      - sshpass

script:
  - pushd rpm-build
  # Freeze the dependencies of requirements
  - export SPEC_FILE=palette-insight.spec
  - ./freeze-requirement.sh palette-insight-toolkit ${SPEC_FILE}
  - ./freeze-requirement.sh palette-insight-website ${SPEC_FILE}
  - ./freeze-requirement.sh palette-insight-agent ${SPEC_FILE}
  - ./freeze-requirement.sh palette-insight-server ${SPEC_FILE}
  - ./freeze-requirement.sh palette-insight-gp-import ${SPEC_FILE}
  - ./freeze-requirement.sh palette-insight-reporting ${SPEC_FILE}
  # Show the contents of the modified (frozen versions) spec file
  - cat ${SPEC_FILE}

  # build the rpm
  - mkdir _build
  - rpmbuild -bb --buildroot $(pwd) --define "version $RPM_VERSION" --define "buildrelease $TRAVIS_BUILD_NUMBER" --define "_rpmdir $(pwd)/_build" ${SPEC_FILE}
  - popd

deploy:
  provider: script
  script: "./deploy.sh"
  skip_cleanup: true
  on:
    branch: master
    tags: false

notifications:
  email:
    on_success: never
    on_failure: never
